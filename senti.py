
from flask import Flask, jsonify

import base64
import io
from PIL import Image
from pytesseract import image_to_string
import re
import os
from flask import Flask, render_template, request
import time
import bert_predict
from sentiment_predict import sentiment_prediction
import time


app = Flask(__name__)



@app.route('/news/<file>', methods=['GET', 'POST'])
def upload_page(file):
    #file='आयपीएल पुढे ढकला; महाराष्ट्राच्या चर्चा'
    '''# if request.method == 'POST':
    file = request.form['headline']
        # start=time.time()
        # file1 = open("temp.txt", "wb")
        # file1.write(file)
        # file1.close()
        # file1 = open("temp.txt", "rb")
        # b64=file1.read()
        # file1.close()
        # b64 = file.encode('ascii')

        # print(time.time()-start)
        '''
    if file :
        print('input received')
        start = time.time()
        extracted_json=bert_predict.newsclassify(file)
        end=time.time()
        print('classify-',end-start)
        print(type(extracted_json))
        return extracted_json
    else:
        return "Hello"

@app.route('/<img>')
def upload_image(img):
    #file=''
    #file="/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQH/2wBDAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQH/wAARCAJJBB4DASIAAhEBAxEB/8QAHwAAAAUFAQEAAAAAAAAAAAAAAwQFBgoBAgcICQAL/8QAbxAAAQIDBAYHBgQCAwkKCQEZAQIRAwQhAAUxQQYHElFhcQgTIoGRofAJFDKxwdEjQuHxFVIKJDMWNDVDYnKSsrMYJTc4U3N0dbTCFzZEVGOCorXSJkVkdoOTpBkaJ0dVZYSFlNTiRsTFV5WjpcP/xAAdAQACAgMBAQEAAAAAAAAAAAAEBQMGAQIHAAgJ/8QASxEAAQIEBAMGBAUDAwEFBgYDAQIRAwQhMQASQVEFYXEGEyKBkfChscHRBxQy4fEjQlIVM2JyCCRDgqIWFzQ1c7IlU1RjksLSNkT/2gAMAwEAAhEDEQA/AOrq8Bz+hsApJUzNR8e6xxSABWtd3OxdSWPN+635Md7zHodPv/GP24wVsXip2lUy+wsdKATSndYFaA+NRm2NLe74VqPQ8vX9+WPYJ7B3jz+1vbB3jz+1jPV8fL9be6vj5frbHfcx6H3/ACeTewW6s8PPLusYhpKSxwY/MG1whuQH8rKCZcEBwMOB+h9UFs98AHJHn7Hu22JoSglyT1HLf39cFAkmvzsYCScPE2NIlhR+7BgOTVpvAsZEuQGy4se/H5WgVEFQ4sL01fHlRg7OHHMMxG+/30pgpCSXAFWfzf1w7nsZ6s5EHx/WxqFLs7pbOrfKj/WuNLGkQAWYY0r+lbCLipFCbnzcMK6D4DAUSKDc9bXFK1pT64JBBPDna8JIChvdvDGygJdqEP3DzNW8rXplnODNyf5WDVEAsRz39L/C1cDKiAty28vf73S+qXu8j9rXoQoPTHnx3tZU91O8+X3sKmUpX6eb/SltFRQ1VBj7r9r3ptCVuGpXn09+Y801EJRL94xandlw+QsdgQySWrx9Px8eFDqZZ6YbzSoPifE4YWOS8sxICRzblzw4H6WGXFH7A00ubHkwwPEiAUvu3u3z0pgqhCiwbcP2++FlCHDUGIGYJx8v1xsaTKVwc54fPc+8WPwpUfLLu5UzyGTPYRUUCt/55393wGuIAXcV0cW9tpgihCnB8s93LzsMEE1wGfDn+9lFMts4DOppTwzpuf5WH91DM1O75Et5WHVEDhmc1a3kPl8jgOPFBoGqGOvSu9aYS0IVXi1at30sMmGSRzyw76crKaJWmHyr9G+oysOiVyZgwxA8c6cA3Cw6lio035vp7qfiAtYDijb8+W7e6XAk0kEmndysoAPQWEgS+ySAAxOWfn88MTlYyIaQaCvIfawsSIBTQ67s2BFxA+tqD716+QwClJDJzw73sMlJDc38iLCiGDWgPLzysYRDBYCrVNOHz8QPAWDWoEGoqXZ+eBFqBBqN7jfBVKSo7ixx3ONz8LHISSzUyGO63hCwbiKDk/6n72Ow4TDd3eqfPHdZcpZzF2NvphRFUMxAYvf4bG+uPQ0M1RQufLDhZRlh234EeA/WwUOE+QHdhz47h6ByEgJJ+gYbvv6Fte8OwwKtQYjpVw2nvTArdp8mbvd7GhX9bBoQAHd3D1ri37WMIALuAcMe+3s55ff37fAcRQcka2fye2KuBsh3q1ORH1sMEOAXZ+H62olANWFDu5Z2OJQAkBgWo7eT2wZYzRAsx+NP51bEaIohgg6ka+/d2xbDGIHAfOw6AQyXZsRTh4uMcGt4IBAY5AkNvwGI+/lYwlIJSc6nwItj/TctS7Dryr8DrTSuBI8VKkkPYj6cnPPbFYIYlz2S4fMOD98bGi5LPk7biGIctgeNggHLYP8AOv2FhACCz8QRwYMQXwy3ZW8YAQzqoL8rMzfH5thDNQc4LUazgtXb19tjyqkFj2TWmXDLK3gQ5IBrj6ej4uaUa3lE4AE8Q4bwx8e7fUFhUmu8GhbBzbKUpSwzWqPh9b/TCVcmtwWJylwAH1Fj7pzsZTgOXypatrUfCPWdrrHoiAJSxFBv7516ecwGUNsw9AB9MesLCICq+sR9bAvUDe7d1r0fFy/b62JhxgSklv3HTn/FCMQRhfm30wb2xuPl97WhQBUa1P3tZb1jER9Cx6G1vhfo4wGvSm/lbAu2Nx8vvYykukEbhYjYQRCABWnEixEOKC9tNx1v79C/kXPT38vjg5b1inWnj/pH7W91p4/6R+1pO9H/AB9ffP2KyYGXiOX1NrLB9YTiH7/0t7rOHn+ls96OXrj2BLUOB5G1nWcPP9Le23cNiDnwPC2UxASBSuxr7v7FcEOGOCy8avwpTLN7AqBNGOe5j3vTg9jS0uA3ic94fcCTlaxSQEvgQA/kPTWMXDStAOrUIYs5Fq6+e2JBKJhspr122qau519cElBWApvf9rFYqVBu+oDth9u6ygUCtT3kY8aWsCNp3ww3+AyxxofoCqTchqklqg06jXo583rKiOlKglw4J+j1sbt9RhJKVnEj13WAUhTs4o/D6V52WlS7Fw3g/fuPOpO+wKoDF83Io3P64fOtsJlC4oPKlKfTz2auD4QEegZ2eldi3J+uEZSFMWGPrj6zsUXDUS7UofBsaUw8MLL5gjBTvzJHzrYBUuokjZH18f3yfG2Vy5SARvVn+p+OC0QDAIUos9idbaEe/khLQpmpjjlhYFSFMc3Bw9fKy8qUpg/Bh9P0+lgfdQAaZbh9Pq+D5WjMBWxu1tTbBSYodNrjXDdXCVQ57q4eD2BVCUzHnm/Niz2cRlgcQC2FB9xYJUm5oA3dx7uGZ42yIKuetWYUvv76HBiIoZnDjn8uV/d2yqEpuIJPGtfA+OFguqXu+f2s5FyLZOeQ8vTb7AmUYEMxbcPocH3VtqYBYuCaA2IoSPP36kojJIALUo4PTr8+rYZsSCsKLeZ9d9MbArhKao+ePgHs6lSbk0PcB8/XCwapEMzEOaU348ueVhRKLJNDU+WnK3TpucMIcylLOQaCxHJm8/gOjtIwVHLIjPPu4WDVBUK1A5H9LOlUjiWOGbeW/OhzsCZJ6FJbkOO6xMOUXYhnDWIZ201N7G+GMKaS4q1r70r+7N1w2DBUXcYl89zbrAGApJPHnxwx5/SzsVIMCyXo7t9CN1i65EkOzcWGHFnq/DCxSZNVKbMH0YX+I05g4ZQZxFKggi5/8tPjYbMHGGmYB2qjgH8eTjm29rHhDUwcNQY8h32V1SDl9l99P28ctxtd7rQAjDeB9x3YWxFllJApyG4NPvyo2NJyaTEYAhwXr0HTSmvTCGtCmbi75ZiwSkKY5uDg/Ldx+dl1UsxI2eWHlyzr32AVKsHA8h68xaHuFP5gWavngdEYEg0YNsPSpt70wioQoE8m9O1hdg7x5/ayiJY1LYncCHYUFa+uVq+7ncPAfe2O4UWarvpt587YNRGA2a9+nnXpSmEsQyCriXr657jW3jCJUN48OHHw77KvUcBhuT98OHnahl1B+zhXAcWfjl55tbIgqBHkqoYN7pgkR05WcOBuw0FL7t1rbCaUEVpYJYcci9j6odcg2TefrhaxUIMTTfhX9fVbE2HTC/vAVPar7As3xP78sJhqCN4Ng9g7x5/ax8wwATSn+TYLqiXKfluyfv587DRDmBPID44Jhxk2o1yXHL9/nywS2CFEsS7YAt6wtcEk8Obj6WNdXxrnT01q9WMyfl97CKUapb3Q+/2qUIqQwNhRw50G3v0qV2DvHn9re2DvHn9rGurG8t6z/S1Orx7WPD5VtNBWATd6Ev0L1+VPLG5ipIHiszClLb7/AMYLbB3jz+1vbB3jz+1jPV8fL9be6vj5frYjvR/x9ffP2K694Nxptyf6+voSXDLguPpYPYO8ef2sdXDwL"
    #file=''
    '''# if request.method == 'POST':
    file = request.form['headline']
        # start=time.time()
        # file1 = open("temp.txt", "wb")
        # file1.write(file)
        # file1.close()
        # file1 = open("temp.txt", "rb")
        # b64=file1.read()
        # file1.close()
        # b64 = file.encode('ascii')

        # print(time.time()-start)
        '''
    '''if file :
        print('input received')
        start = time.time()
        extracted_json=newsclassify(file)
        end=time.time()
        print('classify-',end-start)
        print(type(extracted_json))
        return extracted_json
    else:
        return "Hello"
    '''
    file=img
    print("hey")

    print(len(file))
    file1=''
    for x in range (len(file)):
        if (file[x]=="_"):
            file1=file1+"/"
        else:
            file1=file1+file[x]
    print(str(file1))
    file2=re.sub("""
""","",file1)
    msg = str.encode(file2)

    print(type(msg))
    print(msg)
    #msg = msg[msg.find(b"<plain_txt_msg:img>") + len(b"<plain_txt_msg:img>"):
     #         msg.find(b"<!plain_txt_msg>")]
    msg = base64.b64decode(msg)

    img = Image.open(io.BytesIO(msg))
    print("image")
    #img.show()
    #img1=Image.open("test1.jpg")
    pred=image_to_string(img, lang="mar")
    print(str(pred))
    print("fin")
    return jsonify([{"output": pred}])

@app.route('/sentiment/<sent>', methods=['GET', 'POST'])
def upload_sentiment(sent):
    #file='आयपीएल पुढे ढकला; महाराष्ट्राच्या चर्चा'
    file=sent
    if file:
        print('input received')
        print(file)
        start = time.time()
        print(start)
        extracted_json = sentiment_prediction(file)
        end = time.time()
        print('classify-',end-start)
        print(type(extracted_json))
        return extracted_json
    else:
        return "Hello"

if __name__ == '__main__':
    print("Server Started......")
    app.run(host="0.0.0.0", threaded=False, debug=True)